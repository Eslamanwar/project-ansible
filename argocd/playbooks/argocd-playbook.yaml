---
- name: Deploy Dynatrace
  hosts: localhost
  become: yes
  gather_facts: yes

  pre_tasks:
    - name: Ensure Pip is installed.
      package:
        name: python-pip
        state: present

    - name: Ensure OpenShift client is installed.
      pip:
        name: openshift
        state: present

  tasks:
    - name: Create argocd k8s namespace
      k8s:
        name: argocd
        api_version: v1
        kind: Namespace
        state: present

    - name: Download argo file with specific version
      get_url:
        url: https://raw.githubusercontent.com/argoproj/argo-cd/{{ argocd_version }}/manifests/install.yaml
        dest: ./install.yaml

    - name: Deploy Argocd
      k8s:
        state: present
        namespace: argocd
        src: ./install.yaml

    - name: Deploy Argocd Ingress
      k8s:
        state: present
        namespace: argocd
        definition:
          apiVersion: extensions/v1beta1
          kind: Ingress
          metadata:
            name: argocd-server-http-ingress
            annotations:
              kubernetes.io/ingress.class: "nginx"
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
              nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          spec:
            rules:
              - http:
                  paths:
                    - backend:
                        serviceName: argocd-server
                        servicePort: http
                host: "{{ argocd_url }}"
            tls:
              - hosts:
                  - "{{ argocd_url }}"
                secretName: argocd-secret        


    - name: Deploy Argocd Ingress
      k8s:
        state: present
        namespace: argocd
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: argocd-cm
            namespace: argocd
            labels:
              app.kubernetes.io/name: argocd-cm
              app.kubernetes.io/part-of: argocd
          data:
            url: https://{{ argocd_url }}
            statusbadge.enabled: 'true'
            users.anonymous.enabled: "true"
            dex.config: |
              connectors:
                - type: gitlab
                  id: gitlab
                  name: Gitlab
                  config:
                    baseURL: https://{{ gitlab_url }}
                    clientID: "{{ gitlab_application_id }}"
                    clientSecret: "{{ gitlab_application_secret }}"
            repository.credentials: |
              - url: git@{{ gitlab_url }}
                sshPrivateKeySecret:
                  name: gitlab-deploy-key-secret
                  key: sshPrivateKey
                  
    - name: Deploy Argocd gitlab deploy key secret
      k8s:
        state: present
        namespace: argocd
        definition:        
          apiVersion: v1
          kind: Secret
          metadata:
            name: gitlab-deploy-key-secret
            labels:
              app.kubernetes.io/name: gitlab-deploy-key-secret
              app.kubernetes.io/part-of: argocd
          type: Opaque
          data:
            sshPrivateKey: "{{ gitlab_deploy_private_key }}"

    - name: Deploy argocd ssh known hosts configmap
      k8s:
        state: present
        namespace: argocd
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: argocd-ssh-known-hosts-cm
            namespace: argocd
            labels:
              app.kubernetes.io/name: argocd-ssh-known-hosts-cm
              app.kubernetes.io/part-of: argocd
          data:
            ssh_known_hosts: |
              # gitlab.us:22 SSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu2.8
              gitlab.us ssh-rsa HSUIUENCquwayfdjnasckheijfklansckjniurfnjkasncnashcuerncjansc/RHSCDjsndcencmandnscjsahcelanckxs/+6q72jashcnasc/ANBCSJnkjsaciefjmknasmcnajkfnkas cjjhdsufnsdmnckjnckjnsa
              # gitlab.us:22 SSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu2.8
              gitlab.us ecdsa-sha2-nistp256 BHSAGFHSAniajkdnviernfmcsdncoaismcanscjrsuhgkansdmc/HBVSHDFUJNnaskjfhienfasncmanskjchsjrbnmakjchauenfjsacuefjmckans
              # gitlab.us:22 SSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu2.8
              gitlab.us ssh-ed25519 AAAAJBJDSCJK89324jnbjwqnackjanskjcxnsamansjcaniuenasckasnoicanmekxa                
    - name: Deploy argocd panda
      k8s:
        state: present
        namespace: argocd
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: argocd-panda
            namespace: argocd
            finalizers:
              - resources-finalizer.argocd.argoproj.io
          spec:
            project: default
            source:
              repoURL: git@gitlab.doc.state.wi.us:eai/argocd-panda.git
              targetRevision: HEAD
              path: .
              helm:
                releaseName: argocd-panda
                valueFiles:
                  - "{{ argocd_values_file }}"
            destination:
              server: https://kubernetes.default.svc
              namespace: argocd
            syncPolicy:
              automated:
                prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
                selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
            ignoreDifferences:
              - group: apps
                kind: Deployment
                jsonPointers:
                  - /spec/replicas
